{"version":3,"sources":["App.js","index.js"],"names":["dateBuilder","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","App","useState","city","setCity","search","setSearch","useEffect","a","fetch","response","json","resJson","main","fetchApi","className","type","placeholder","onChange","e","target","value","Date","temp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAMMA,EAAc,SAACC,GACnB,IAwBIC,EAVO,CACT,SACA,SACA,UACA,YACA,WACA,SACA,YAGaD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EA1BS,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAciBL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,IA8CrBE,MA3Cf,WAAgB,IAAD,EACWC,mBAAS,MADpB,mBACNC,EADM,KACAC,EADA,OAEeF,mBAAS,aAFxB,mBAENG,EAFM,KAEEC,EAFF,KAgBb,OAZAC,qBAAU,YACM,uCAAG,8BAAAC,EAAA,sEACQC,MAAM,qDAAD,OAC2BJ,EAD3B,yDADb,cACTK,EADS,gBAIOA,EAASC,OAJhB,OAITC,EAJS,OAKfR,EAAQQ,EAAQC,MALD,2CAAH,qDAQdC,KACC,CAACT,IAGF,iCACE,qBAAKU,UAAU,YAAf,SACE,uBACEC,KAAK,SACLC,YAAY,YACZF,UAAU,SACVG,SAAU,SAACC,GACTb,EAAUa,EAAEC,OAAOC,YAIvBlB,EAKA,sBAAKY,UAAU,YAAf,UACE,4BAAIxB,EAAY,IAAI+B,QACpB,6BAAKjB,IACL,+BAAKF,EAAKoB,KAAV,eAPF,qBAAKR,UAAU,YAAf,SACE,sDChEVS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.57113a75.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nconst api = {\n  key: \"a338376f1ef51f0cf4068c8a82cc6018\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nconst dateBuilder = (d) => {\n  let months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n\n  return `${day} ${date} ${month} ${year}`;\n};\n\nfunction App() {\n  const [city, setCity] = useState(null);\n  const [search, setSearch] = useState(\"bengaluru\");\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const response = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=a338376f1ef51f0cf4068c8a82cc6018`\n      );\n      const resJson = await response.json();\n      setCity(resJson.main);\n    };\n\n    fetchApi();\n  }, [search]);\n\n  return (\n    <main>\n      <div className=\"searchBar\">\n        <input\n          type=\"search\"\n          placeholder=\"Search...\"\n          className=\"search\"\n          onChange={(e) => {\n            setSearch(e.target.value);\n          }}\n        />\n      </div>\n      {!city ? (\n        <div className=\"container\">\n          <h3>No Data found!</h3>\n        </div>\n      ) : (\n        <div className=\"container\">\n          <p>{dateBuilder(new Date())}</p>\n          <h2>{search}</h2>\n          <h1>{city.temp} Â°C</h1>\n        </div>\n      )}\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}